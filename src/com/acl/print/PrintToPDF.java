package com.acl.print;

import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.naming.NamingException;

import com.acl.bean.UserBean;
import com.acl.dao.EmployeesDao;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.Font;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.Phrase;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;

public class PrintToPDF {
	private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18, Font.BOLD);
	private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12, Font.BOLD);

	public boolean printToPdf(String limit, String offset, String username)
			throws FileNotFoundException, DocumentException, NumberFormatException, NamingException, SQLException {
		String tableName = new SimpleDateFormat("dd-MM-yyyy_HH-mm-ss").format(new Date());
		String path = "D:/eclipse-workspace/accessControlLogins/print/" + tableName + ".pdf";
		Document document = null;
		try {
			document = new Document();
			PdfWriter.getInstance(document, new FileOutputStream(path));
			document.open();
			addTitlePage(document, username);
			createTable(document, limit, offset);
		} finally {
			if (document != null) {
				document.close();
			}
		}
		return true;
	}

	private static void createTable(Document document, String limit, String offset)
			throws DocumentException, NumberFormatException, NamingException, SQLException {
		PdfPTable table = new PdfPTable(5);
		EmployeesDao ed = new EmployeesDao();
		ArrayList<UserBean> view = ed.getView(Integer.parseInt(limit), Integer.parseInt(offset));

		PdfPCell c1 = new PdfPCell(new Phrase("user id"));
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		table.addCell(c1);
		c1 = new PdfPCell(new Phrase("username"));
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		table.addCell(c1);
		c1 = new PdfPCell(new Phrase("user role"));
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		table.addCell(c1);
		c1 = new PdfPCell(new Phrase("email"));
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		table.addCell(c1);
		c1 = new PdfPCell(new Phrase("phone"));
		c1.setHorizontalAlignment(Element.ALIGN_CENTER);
		table.addCell(c1);

		table.setHeaderRows(1);

		for (UserBean bean : view) {
			table.addCell(bean.getUserid().toString());
			table.addCell(bean.getUsername().toString());
			table.addCell(bean.getRole_name().toString());
			table.addCell(bean.getEmail().toString());
			table.addCell(bean.getPhone().toString());
		}

		document.add(table);

	}

	private static void addTitlePage(Document document, String username) throws DocumentException {
		Paragraph preface = new Paragraph();
		preface.add(new Paragraph(" "));
		preface.add(new Paragraph("User Details", catFont));
		preface.add(new Paragraph(" "));
		preface.add(new Paragraph("Report generated by: " + username + ", " + new Date(), smallBold));
		preface.add(new Paragraph(" "));
		preface.add(new Paragraph(" "));

		document.add(preface);
	}
}
