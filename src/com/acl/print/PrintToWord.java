package com.acl.print;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.math.BigInteger;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import javax.naming.NamingException;

import org.apache.poi.wp.usermodel.HeaderFooterType;
import org.apache.poi.xwpf.usermodel.ParagraphAlignment;
import org.apache.poi.xwpf.usermodel.XWPFDocument;
import org.apache.poi.xwpf.usermodel.XWPFHeader;
import org.apache.poi.xwpf.usermodel.XWPFParagraph;
import org.apache.poi.xwpf.usermodel.XWPFRun;
import org.apache.poi.xwpf.usermodel.XWPFTable;
import org.apache.poi.xwpf.usermodel.XWPFTableCell;
import org.apache.poi.xwpf.usermodel.XWPFTableRow;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTHeight;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTShd;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTString;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblPr;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTblWidth;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTcPr;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTTrPr;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.CTVerticalJc;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.STShd;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.STTblWidth;
import org.openxmlformats.schemas.wordprocessingml.x2006.main.STVerticalJc;

import com.acl.bean.UserBean;
import com.acl.dao.EmployeesDao;

public class PrintToWord {
	private XWPFDocument document;

	public boolean printToWord(String limit, String offset, String username)
			throws NumberFormatException, NamingException, SQLException, IOException {
		document = new XWPFDocument();
		FileOutputStream out = null;
		ArrayList<UserBean> view = null;
		EmployeesDao ed = new EmployeesDao();
		String tableName = new SimpleDateFormat("dd-MM-yyyy_HH-mm-ss").format(new Date());
		String path = "D:/eclipse-workspace/accessControlLogins/print/" + tableName + ".docx";

		try {
			view = ed.getView(Integer.parseInt(limit), Integer.parseInt(offset));
			out = new FileOutputStream(new File(path));
			XWPFParagraph paragraph = document.createParagraph();
			XWPFRun run = paragraph.createRun();
			XWPFHeader header = document.createHeader(HeaderFooterType.FIRST);

			run.setText("Report generated by: " + username + ", " + new Date());

			paragraph = header.createParagraph();
			paragraph.setAlignment(ParagraphAlignment.LEFT);
			run = paragraph.createRun();
			run.setFontSize(20);
			run.setBold(true);
			run.setText("User Details");

			XWPFTable table = document.createTable();

			XWPFTableRow tableHead = table.getRow(0);
			tableHead.getCell(0).setText("user id");
			tableHead.addNewTableCell().setText("username");
			tableHead.addNewTableCell().setText("user role");
			tableHead.addNewTableCell().setText("email");
			tableHead.addNewTableCell().setText("phone");

			for (UserBean bean : view) {
				int count = 0;
				XWPFTableRow tableRows = table.createRow();
				tableRows.getCell(count++).setText(bean.getUserid().toString());
				tableRows.getCell(count++).setText(bean.getUsername().toString());
				tableRows.getCell(count++).setText(bean.getRole_name().toString());
				tableRows.getCell(count++).setText(bean.getEmail().toString());
				tableRows.getCell(count).setText(bean.getPhone().toString());
			}
			addStyle(table);
			document.write(out);
			return true;
		} finally {
			if (out != null) {
				out.close();
			}
		}
	}

	private void addStyle(XWPFTable table) {

		CTTblPr tblpr = table.getCTTbl().getTblPr(); // get table property
		CTTblWidth tblW = tblpr.getTblW();
		tblW.setW(BigInteger.valueOf(5000)); //set the table width
		tblW.setType(STTblWidth.PCT);
		tblpr.setTblW(tblW);
		CTString str = tblpr.addNewTblStyle(); // set new table style
		str.setVal("style_1");

		List<XWPFTableRow> rows = table.getRows();
		int rowCt = 0;
		int colCt = 0;

		for (XWPFTableRow row : rows) {
			CTTrPr trPr = row.getCtRow().addNewTrPr();  //get row property
			CTHeight ht = trPr.addNewTrHeight();
			ht.setVal(BigInteger.valueOf(360));

			List<XWPFTableCell> cells = row.getTableCells();

			for (XWPFTableCell cell : cells) {
				CTTcPr tcpr = cell.getCTTc().addNewTcPr();
				CTVerticalJc va = tcpr.addNewVAlign();
				va.setVal(STVerticalJc.CENTER);

				CTShd ctshd = tcpr.addNewShd();
				ctshd.setColor("auto");
				ctshd.setVal(STShd.CLEAR);

				if (rowCt == 0) {
					ctshd.setFill("A7BFDE");
				} else if (rowCt % 2 == 0) {
					ctshd.setFill("D3DFEE");
				} else {
					ctshd.setFill("EDF2F8");
				}
				colCt++;
			}
			colCt = 0;
			rowCt++;
		}
	}
}
